"use strict";(self.webpackChunkmobit_docs=self.webpackChunkmobit_docs||[]).push([[9999],{21726:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>c,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"core-types","title":"Core","description":"Addresses","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/core-types.mdx","sourceDirName":".","slug":"/core-types","permalink":"/mobit-docs/en/core-types","draft":false,"unlisted":false,"editUrl":"https://github.com/sociallayer-im/mobit-doc/tree/main/docs/core-types.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docs","previous":{"title":"Introduction","permalink":"/mobit-docs/en/intro"},"next":{"title":"Spore Types","permalink":"/mobit-docs/en/spore-types"}}');var i=s(74848),r=s(28453),a=s(40964),o=s(87210);const c={sidebar_position:2},d="Core",l={},h=[{value:"<code>Addresses</code>",id:"addresses",level:2},{value:"<code>BlockHeight</code>",id:"blockheight",level:2},{value:"<code>TransactionOutputsStatus</code>",id:"transactionoutputsstatus",level:2},{value:"Practical Applications",id:"practical-applications",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"core",children:"Core"})}),"\n",(0,i.jsx)(t.h2,{id:"addresses",children:(0,i.jsx)(t.code,{children:"Addresses"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"addresses"})," is one of the core concepts in the Mobit indexing system, where almost all ",(0,i.jsx)(t.code,{children:"script"})," data is mapped to ",(0,i.jsx)(t.code,{children:"addresses"}),"."]}),"\n",(0,i.jsx)(o.A,{typeName:"addresses",typeDescription:"The Addresses type represents address information on the blockchain.",fields:[{name:"id",type:"String!",description:"The string representation of the address, following the CKB address format (e.g., ckt1qqju98wrz7q35mm08xz6020tcjpch5ug6xwslmhv7z7dvrmvp96mkqdw3fgja6ckhv229jh6skfkymtxgmz0yxssqueg7mtyknc05xezlur24eys). Purpose: to uniquely identify an address in the blockchain network."},{name:"script_args",type:"bytea!",description:"Script parameters formatted as a hexadecimal byte array prefixed with \\x. Purpose: contains parameters required by the script, such as the public key hash for a SECP256K1 script. Example value: \\xae8a512eeb16bb14a2cafa8593626d6646c4f21a1007328f6d64b4f0fa1b22ff."},{name:"script_code_hash",type:"bytea!",description:"Script code hash, a 32-byte hash value. Purpose: uniquely identifies the locking/unlocking script used. Example value: \\x25c29dc317811a6f6f3985a7a9ebc4838bd388d19d0feeecf0bcd60f6c0975bb."},{name:"script_hash_type",type:"smallint!",description:"Script hash type, with values 0 (Data hash) or 1 (Type hash). Purpose: determines how the script_code_hash is interpreted. Example value: 1."}]}),"\n",(0,i.jsx)(t.p,{children:"You can obtain real-time results through the following query example:"}),"\n",(0,i.jsx)(a.A,{defaultQuery:"query QueryAddresses {\n  addresses(limit: 1) {\n    id\n    script_args\n    script_code_hash\n    script_hash_type\n  }\n}\n"}),"\n",(0,i.jsxs)(t.p,{children:["While these are the basic fields of ",(0,i.jsx)(t.code,{children:"addresses"}),", their true power lies in the rich indexing supported. For example, you can query ",(0,i.jsx)(t.code,{children:"token_info"})," associated with a specific address:"]}),"\n",(0,i.jsx)(a.A,{defaultQuery:'query QueryTokenInfo {\naddresses(limit: 1, where: {script_args: {_eq: "\\xb73b6ab39d79390c6de90a09c96b290c331baf1798ed6f97aed02590929734e800000080"}, script_code_hash: {_eq: "\\x50bd8d6680b8b9cf98b73f3c08faf8b2a21914311954118ad6609be6e78a1b95"}}) {\n  id\n  script_args\n  script_code_hash\n  script_hash_type\n  token_info {\n    decimal\n    expected_supply\n    inscription_id\n    mint_limit\n    mint_status\n    name\n    symbol\n    transaction_hash\n    transaction_index\n    type_id\n    udt_hash\n  }\n}\n}\n'}),"\n",(0,i.jsx)(t.p,{children:"Of course, you can also define variables to enhance query flexibility:"}),"\n",(0,i.jsx)(a.A,{defaultQuery:"\n  query QueryTokenInfo($limit: Int, $scriptArgs: String, $scriptCodeHash: String) {\n    addresses(limit: $limit, where: {script_args: {_eq: $scriptArgs}, script_code_hash: {_eq: $scriptCodeHash}}) {\n      id\n      script_args\n      script_code_hash\n      script_hash_type\n      token_info {\n        decimal\n        expected_supply\n        inscription_id\n        mint_limit\n        mint_status\n        name\n        symbol\n        transaction_hash\n        transaction_index\n        type_id\n        udt_hash\n      }\n    }\n  }\n",defaultVariables:'{\n  limit: 1,\n  scriptArgs: "\\xb73b6ab39d79390c6de90a09c96b290c331baf1798ed6f97aed02590929734e800000080",\n  scriptCodeHash: "\\x50bd8d6680b8b9cf98b73f3c08faf8b2a21914311954118ad6609be6e78a1b95"\n}'}),"\n",(0,i.jsx)(t.admonition,{title:"Note",type:"caution",children:(0,i.jsxs)(t.p,{children:["In queries, be sure to use the ",(0,i.jsx)(t.code,{children:"\\\\x"})," prefix to indicate hexadecimal byte strings, rather than ",(0,i.jsx)(t.code,{children:"0x"}),". For example, ",(0,i.jsx)(t.code,{children:"0x1a2b3c"})," should be written as ",(0,i.jsx)(t.code,{children:"\\\\x1a2b3c"}),"."]})}),"\n",(0,i.jsxs)(t.p,{children:["In addition to ",(0,i.jsx)(t.code,{children:"token_infos"}),", you can also query other entities such as ",(0,i.jsx)(t.code,{children:"spores"}),", ",(0,i.jsx)(t.code,{children:"xudt_cells"}),", etc. For specific supported query types, please refer to the ",(0,i.jsx)(t.a,{href:"/playground",children:"GraphQL Playground"})," documentation."]}),"\n",(0,i.jsx)(t.h2,{id:"blockheight",children:(0,i.jsx)(t.code,{children:"BlockHeight"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"block_height"})," reflects the latest block that the indexer has synchronized to. This information is particularly important for verifying whether certain transactions have been indexed."]}),"\n",(0,i.jsx)(o.A,{typeName:"block_height",typeDescription:"The BlockHeight type represents the current block height information.",fields:[{name:"height",type:"bigint!",description:"The current indexed block height. Type: bigint. Purpose: indicates the block height processed by the indexer. Application scenario: checking synchronization status and data freshness."},{name:"id",type:"Int!",description:"Record identifier. Fixed value: 1. Purpose: since only one record exists, its value is always 1."}]}),"\n",(0,i.jsx)(t.p,{children:"To retrieve the current block height, the query is as follows:"}),"\n",(0,i.jsx)(a.A,{defaultQuery:"query GetSyncStatus {\nblock_height {\n  height\n}\n}"}),"\n",(0,i.jsx)(t.h2,{id:"transactionoutputsstatus",children:(0,i.jsx)(t.code,{children:"TransactionOutputsStatus"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"transaction_outputs_status"})," is used to record the current status of transaction outputs. When constructing a new transaction, unconsumed ",(0,i.jsx)(t.code,{children:"outputs"})," must be selected as new ",(0,i.jsx)(t.code,{children:"inputs"}),"."]}),"\n",(0,i.jsx)(o.A,{typeName:"transaction_outputs_status",typeDescription:"The TransactionOutputsStatus type represents the status of transaction outputs.",fields:[{name:"consumed_input_transaction_hash",type:"bytea",description:"The transaction hash that consumed this output. Format: 32-byte hash value. Nullable: if not consumed, it is null. Purpose: to track the consumption status of UTXOs."},{name:"consumed_input_transaction_index",type:"Int",description:"The index of the consumed input. Type: integer. Nullable: if not consumed, it is null. Purpose: indicates the position in the list of inputs of the consuming transaction."},{name:"output_transaction_hash",type:"bytea!",description:"The transaction hash that created this output. Format: 32-byte hash value. Purpose: to identify the transaction that created this UTXO."},{name:"output_transaction_index",type:"Int!",description:"The index of the output. Type: integer. Purpose: to indicate the position in the list of transaction outputs, starting from 0."}]}),"\n",(0,i.jsxs)(t.p,{children:["Querying some ",(0,i.jsx)(t.code,{children:"transaction_outputs_status"}),":"]}),"\n",(0,i.jsx)(a.A,{defaultQuery:"query QueryOutputsStatus {\ntransaction_outputs_status(limit: 10) {\n  consumed_input_transaction_hash\n  consumed_input_transaction_index\n  output_transaction_hash\n  output_transaction_index\n}\n}"}),"\n",(0,i.jsxs)(t.p,{children:["Querying specific ",(0,i.jsx)(t.code,{children:"transaction_outputs_status"}),":"]}),"\n",(0,i.jsx)(a.A,{defaultQuery:"query GetUtxoStatus($txHash: bytea!) {\ntransaction_outputs_status(\n  where: { output_transaction_hash: { _eq: $txHash } }\n) {\n  output_transaction_index\n  consumed_input_transaction_hash\n}\n}",defaultVariables:'{\n"txHash": "\\xc30a1a6e264b7f21aa69ecea9159f60b54ec4c81a00630e21e4a77842b5c69e1"\n}'}),"\n",(0,i.jsx)(t.h2,{id:"practical-applications",children:"Practical Applications"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"UTXO Tracking"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Check if a specific output has been consumed"}),"\n",(0,i.jsx)(t.li,{children:"Track the asset transfer path"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Address Validation"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Verify the script type of an address"}),"\n",(0,i.jsx)(t.li,{children:"Check the locking script parameters of an address"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Synchronization Status Monitoring"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Monitor the synchronization status of the indexer"}),"\n",(0,i.jsx)(t.li,{children:"Ensure data timeliness"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{title:"Tip",type:"tip",children:(0,i.jsxs)(t.p,{children:["All fields returning ",(0,i.jsx)(t.code,{children:"bytea"})," type must be prefixed with ",(0,i.jsx)(t.code,{children:"\\x"})," in hexadecimal format during queries."]})}),"\n",(0,i.jsx)(t.admonition,{title:"Note",type:"caution",children:(0,i.jsx)(t.p,{children:"When using in production, ensure proper handling of error cases and validate returned data."})}),"\n",(0,i.jsx)(t.p,{children:"By deeply understanding the meanings and uses of these core fields, you can more effectively design queries and handle data. These fields form the foundation for asset tracking and management within the Mobit system."})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},87210:(e,t,s)=>{s.d(t,{A:()=>c});s(96540);var n=s(34164),i=s(92303),r=s(95293);const a={graphqlContainer:"graphqlContainer_txj9",light:"light_tjNd",dark:"dark_xDko",typeDescription:"typeDescription_l4MU",keyword:"keyword_CRfX",typeName:"typeName_VxqW",fields:"fields_Dmof",field:"field_mRXJ",fieldName:"fieldName_fK8b",colon:"colon_zlWV",fieldType:"fieldType_bW41",braces:"braces_l5fT"};var o=s(74848);function c(e){let{typeName:t,typeDescription:s,fields:c}=e;const{colorMode:d}=(0,r.G)();(0,i.A)();return(0,o.jsx)("div",{className:(0,n.A)(a.graphqlContainer,a[d],"theme-code-block"),children:(0,o.jsxs)("div",{className:a.typeHeader,children:[s&&(0,o.jsx)("div",{className:a.typeDescription,children:(0,o.jsxs)("span",{children:["# ",s]})}),(0,o.jsxs)("div",{className:a.codeBlock,children:[(0,o.jsx)("span",{className:a.keyword,children:"type"})," ",(0,o.jsx)("span",{className:a.typeName,children:t})," ",(0,o.jsx)("span",{className:a.braces,children:"{"}),(0,o.jsx)("div",{className:a.fields,children:c.map((e=>{let{name:t,type:s,description:n}=e;return(0,o.jsxs)("div",{className:a.field,"data-tooltip":n,children:[(0,o.jsx)("span",{className:a.fieldName,children:t}),(0,o.jsx)("span",{className:a.colon,children:":"})," ",(0,o.jsx)("span",{className:a.fieldType,children:s})]},t)}))}),(0,o.jsx)("span",{className:a.braces,children:"}"})]})]})})}},40964:(e,t,s)=>{s.d(t,{A:()=>j});var n=s(96540),i=s(86105),r=s(5e3),a=s(44939),o=s(72011),c=s(4671),d=s(61545),l=s(34066),h=s(30222),p=s(19337),u=s(54676),m=s(55629),x=s(36694),f=s(64198),y=s(92303),b=s(95293),g=s(74848);function j(e){let{defaultQuery:t,defaultVariables:s="{}",endpoint:j="https://unistate-ckb-test.unistate.io/v1/graphql"}=e;const _=(0,y.A)(),{colorMode:v}=(0,b.G)(),k="dark"===v,A=e=>e.replace(/\\/g,"\\\\");t=A(t);const T=t.includes("$")||t.includes("variables"),[q,C]=(0,n.useState)(j),[w,N]=(0,n.useState)(t),[S,z]=(0,n.useState)((()=>{if("string"==typeof s)return A(s);const e=j.includes("test")?"test":"main",t=s[e];return"string"==typeof t?A(t):JSON.stringify(t,null,2)})),[M,Q]=(0,n.useState)(null),[P,O]=(0,n.useState)(!1);(0,n.useEffect)((()=>{try{const e=(0,f.G)(t);N(e)}catch(e){console.error("Failed to format initial query:",e)}}),[t]);const D=k?h.A:p.A;if(!_)return null;const I={color:"var(--ifm-color-emphasis-700)","&:hover":{color:"var(--ifm-color-primary)",backgroundColor:"var(--ifm-color-emphasis-200)"}},F={color:"var(--ifm-color-emphasis-700)",borderColor:"var(--ifm-color-emphasis-300)",fontSize:"0.75rem",minWidth:"auto",px:1,"&.Mui-selected, &:hover":{color:"var(--ifm-color-primary)",borderColor:"var(--ifm-color-primary)",backgroundColor:"var(--ifm-color-emphasis-200)"}},H={...F,backgroundColor:"var(--ifm-color-primary-lighter)",color:"var(--ifm-color-primary-darker)","&:hover":{backgroundColor:"var(--ifm-color-primary-lighter)",color:"var(--ifm-color-primary-darker)"}};return(0,g.jsxs)(i.A,{sx:{my:2},children:[(0,g.jsxs)(i.A,{sx:{display:"flex",flexDirection:"column",gap:2,mb:2},children:[(0,g.jsxs)(i.A,{sx:{flexGrow:1,border:1,borderColor:"var(--ifm-color-emphasis-300)",borderRadius:1,position:"relative","&:hover .toolbar":{opacity:1},maxWidth:"100%"},children:[(0,g.jsxs)(i.A,{className:"toolbar",sx:{position:"absolute",top:8,right:8,zIndex:1,display:"flex",gap:1,backgroundColor:"rgba(var(--ifm-background-surface-color-rgb), 0.95)",backdropFilter:"blur(8px)",padding:"4px",borderRadius:1,boxShadow:"0 2px 8px rgba(0,0,0,0.1)",opacity:0,transition:"opacity 0.2s ease"},children:[(0,g.jsxs)(r.A,{size:"small",sx:{"& .MuiButtonGroup-grouped":{borderColor:"var(--ifm-color-emphasis-300)"}},children:[(0,g.jsx)(a.A,{sx:q.includes("test")?H:F,onClick:()=>C("https://unistate-ckb-test.unistate.io/v1/graphql"),children:"Test"}),(0,g.jsx)(a.A,{sx:q.includes("test")?F:H,onClick:()=>C("https://ckb-graph.unistate.io/v1/graphql"),children:"Main"})]}),(0,g.jsxs)(r.A,{size:"small",sx:{"& .MuiButtonGroup-grouped":{borderColor:"var(--ifm-color-emphasis-300)"}},children:[(0,g.jsx)(o.A,{title:"Format Query",children:(0,g.jsx)(c.A,{size:"small",onClick:()=>{try{N((0,f.G)(w))}catch(e){console.error("Failed to format query:",e)}},sx:I,children:(0,g.jsx)(u.A,{fontSize:"small"})})}),(0,g.jsx)(o.A,{title:"Copy Query",children:(0,g.jsx)(c.A,{size:"small",onClick:()=>navigator.clipboard.writeText(w),sx:I,children:(0,g.jsx)(m.A,{fontSize:"small"})})}),(0,g.jsx)(o.A,{title:"Execute Query",children:(0,g.jsx)(c.A,{size:"small",onClick:async()=>{try{O(!0);const e=await fetch(q,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:w,variables:JSON.parse(S)})}),t=await e.json();Q(t)}catch(e){Q({error:e.message})}finally{O(!1)}},disabled:P,sx:{...I,"&:hover":{color:"var(--ifm-color-primary)",backgroundColor:"var(--ifm-color-emphasis-200)"},"&.Mui-disabled":{color:"var(--ifm-color-emphasis-300)"}},children:(0,g.jsx)(x.A,{fontSize:"small"})})})]})]}),(0,g.jsx)(l.A,{language:"graphql",style:D,customStyle:{margin:0,padding:"16px",backgroundColor:"var(--ifm-background-surface-color)"},contentEditable:!0,onKeyDown:e=>{if("Tab"===e.key){e.preventDefault();const t=window.getSelection(),s=t?.getRangeAt(0),n=document.createTextNode("  ");s?.insertNode(n),s?.setStartAfter(n),s?.setEndAfter(n)}},onInput:e=>{const t=e.target.innerText;N(t);t.includes("$")||t.includes("variables")||z("{}")},children:w})]}),T&&(0,g.jsx)(d.A,{label:"Variables",multiline:!0,value:S,onChange:e=>z(e.target.value),sx:{flex:1,"& .MuiOutlinedInput-root":{bgcolor:"var(--ifm-background-surface-color)","& fieldset":{borderColor:"var(--ifm-color-emphasis-300)"}},"& .MuiInputLabel-root":{color:"var(--ifm-color-emphasis-700)"},"& .MuiInputBase-input":{color:"var(--ifm-font-color-base)",fontFamily:"var(--ifm-font-family-monospace)"}}})]}),M&&(0,g.jsx)(i.A,{sx:{border:1,borderColor:"var(--ifm-color-emphasis-300)",borderRadius:1,overflow:"auto",maxHeight:"300px"},children:(0,g.jsx)(l.A,{language:"json",style:D,customStyle:{margin:0,padding:16,backgroundColor:"var(--ifm-background-surface-color)"},children:JSON.stringify(M,null,2)})})]})}}}]);